How did viwing a diff between two versions help you spot the bug?

The diff tool show those parts in the code that are different between different version of the file.
If bug appeared by int latest version of code, than seeing changed parts of the code reduces amount
of code lines to examine to find the bug.

How could having easy acces to the entire history of a file make you more efficient programmer in the long term?

It provides way to return to wlking version of programs if things get meesed up in newer version of the program. Also if colaborative programs are being created it allows to see changes made by other contributors.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

It gives more control on commits that  allows to make more logicaly consistent commits that allow to seperate different changes. It makes debugging easier. The downside is that you must remember to make commits. And also you have to ake decissions when to make commits.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, tread each file seperately?

Because for some uses multiple file commits are not so usefull. Multiple file commits are usefull for larger projects containing multiple files (program code, book, etc).

How might using version control make you more confident to make changes that could break something?

Because if bug is introduced it can easilly be tracked down by checking out different commits, and finding commits that introduced particular bug.

Now that you have your workspace set up, what do you want to try using Git for?

For writing program code.
