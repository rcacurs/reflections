What happend whe you initialize a repository? Why do you need to do it?

When you initialize repository hidden folder named .git is creating containing metadata for version tracking of all files. When git repository is created no commits are created by default. It is partially usefull because meaningfull commit message can be assigned to commit.

How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area doesn't necesseraly contain all the files from working directory. This gives more control over each
commit and allows to make commits logically seperate.

How can you use the staging area to make sure you have one commit per logical change?

Each file that fits into particular commit is added seperately to staging area. Although a lot of files in working directory may be different then they were at the start of working session, each file can be put into staging area seperately.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

Branches are helpfull if new experimental feature should be implemented. In this way current working version is preserved end experimental feature can be implemented without any worries that working version will be broken.

How do the diagrams help you visualize the branch structure?

The concept may introduce a lot of elements that are hard to track just by imagination. The diagrams allow to examine comlicated branch structure visually.

What is the result of merging two branches together? Why do we represent it int the diagram the way we do?

By merging tow branches together we get one single branch which is combination of the two branches. The diagrams provides with visual representation of brancing and they allow eassily to see wich commits relate to which branch.
